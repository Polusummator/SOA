openapi: 3.0.1
info:
  title: FastAPI
  version: 0.1.0
paths:
  /register:
    post:
      summary: Register
      operationId: register_register_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAuth"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /login:
    post:
      summary: Login
      operationId: login_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserAuth"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /user/me/info:
    get:
      summary: Get My Info
      operationId: get_my_info_user_me_info_get
      parameters:
      - name: token
        in: cookie
        required: false
        schema:
          type: string
          title: Token
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
    put:
      summary: Update My Info
      operationId: update_my_info_user_me_info_put
      parameters:
      - name: token
        in: cookie
        required: false
        schema:
          type: string
          title: Token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProfileUpdate"
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    ProfileUpdate:
      properties:
        first_name:
          anyOf:
          - type: string
            maxLength: 50
          - type: "null"
          title: First Name
        last_name:
          anyOf:
          - type: string
            maxLength: 50
          - type: "null"
          title: Last Name
        bio:
          anyOf:
          - type: string
            maxLength: 250
          - type: "null"
          title: Bio
        birthday:
          anyOf:
          - type: string
            format: date
          - type: "null"
          title: Birthday
        phone_number:
          anyOf:
          - type: string
            format: phone
          - type: "null"
          title: Phone Number
        second_email:
          anyOf:
          - type: string
            format: email
          - type: "null"
          title: Second Email
      type: object
      title: ProfileUpdate
    UserAuth:
      properties:
        username:
          type: string
          maxLength: 50
          title: Username
        password:
          type: string
          maxLength: 50
          title: Password
        email:
          type: string
          format: email
          title: Email
      type: object
      required:
      - username
      - password
      - email
      title: UserAuth
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
